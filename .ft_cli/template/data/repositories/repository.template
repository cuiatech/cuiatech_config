import 'package:flutter_modular/flutter_modular.dart';
import '../../{{repositoryPathInterface}}/{{repositoryNameFileInterface.snakeCase}}.dart';
import '../datasources/{{datasourceNameFileInterface.snakeCase}}.dart';

final ${{repositoryNameClass.pascalCase}} = Bind.lazySingleton(
  (i) => {{repositoryNameClass.pascalCase}}(i.get()),
);

class {{repositoryNameClass.pascalCase}} implements {{repositoryNameClassInterface.pascalCase}} {
  final {{datasourceNameClassInterface.pascalCase}} _{{datasourceNameClassInterface.camelCase}};

  {{repositoryNameClass.pascalCase}}(this._{{datasourceNameClassInterface.camelCase}});

  @override
  Future<void> call() async {
    try {
      return await _{{datasourceNameClassInterface.camelCase}}();
    } catch (e) {
      rethrow;
    }
  }
}
  